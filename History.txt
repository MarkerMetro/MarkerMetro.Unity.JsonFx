Release History

v1.4b
- Forked by TowerOfBricks to add more features to the project: https://bitbucket.org/TowerOfBricks/jsonfx-for-unity3d/overview
- Added support for overriding how certain types are serialized, JsonConverter.
- Added attribute JsonOptIn, which can be applied to classes if you want to explicitly specify which members should be serialized (specify with JsonMember attribute).
- Thanks to handsomePATT (Unity forums) for testing it on the iPhone!
v.1.4b
- Adapted by darktable to better work with Unity3D (especially for the iPhone): https://bitbucket.org/darktable/jsonfx-for-unity3d/overview
v1.4.1003.3007
- added helper methods for manipulating JsonML structures
- added event callbacks during JBST bindings for added structure manipulation
- finished unifying & simplifying output rendering of server controls / MVC helpers
- changed names of generated build result classes

v1.4.1003.1321
- improving readability: de-obfuscating all the identifiers in JsonML & JBST scripts
- extra checking around JsonML error handling
- no longer filtering JsonML script tags
- added JsonMarkupWriter for building up markup representation of JSON data during serialization
- changed internal structure of generated build result classes
- began unifying & simplifying output rendering of server controls / MVC helpers
- changed ResourceInclude default StyleIncludeType from Import to Link

v1.3.1003.0906
- added error handling callbacks to JsonML & JBST
- made dependency between JsonFx_UI.js and JsonFx_Bindings.js optional

v1.3.1003.0808
- drastically sped up initial JBST page binding by simplifying most common path
- fixed CSS class removal when multiple exist
- updated jQuery in MvcTemplate to v1.4.2

v1.3.1001.2320
- added ability to serialize unquoted object property names
- reverted regex fixes for older Opera Browsers (they are causing issues in valid situations)

v1.3.1001.1608
- added ability to include full external URLs in ResourceInclude references
- added ability to include full external URLs in merge files
- fixed JSBT event handlers in W3C-compliant (non-IE) browsers

v1.3.1001.1206
- JsonML Builder fixes:
- updated events to avoid false positives
- restructured to avoid duplication of method building
- better leverage DOM event management

v1.3.1001.0608
- improved mobile support in CssUserAgent
- defaulted AllowNullValueTypes to true
- improved error messaging in RESTful MVC

v1.3.0912.0620
- fixed a bug where the AllowNullValueTypes usage was reversed
- added some RESTful ActionResults
- improved REST headers

v1.3.0911.2815
- added IDataReader (counterpart to IDataWriter) an abstraction for deserializers which allows easily switching between XML & JSON (or other formats)
- added an ASP.NET MVC ModelBinder which allows switching input via Dependency Injection
- added provider layer between reader/writer and MVC binder/result
- cleaned up MVC template
- IIS 6 & 7 fixes

v1.2.0911.2218
- added an abstraction for serializers which allows easily switching between XML & JSON
- added a ASP.NET MVC ActionResult which allows switching output via Dependency Injection
- moved all MVC classes into JsonFx.Mvc

v1.1.0911.0718
- added additional script configurations (JBST-only, JsonFx-Core)
- added a JBST compiler helper
- added VS2008 solution ease maintenance

v1.1.0910.3107
- added JsonFx-enabled ASP.NET MVC project template
- using EcmaScriptIdentifier to enforce JBST names

v1.1.0910.3008
- tweak to IE work-around to better support auto-complete

v1.1.0910.2108
- emitting numeric values that cannot be expressed in IEEE-754 as strings
- removed concept of StrictConformance as has been replaced with EcmaScriptWriter

v1.1.0910.0621
- fixing type coercion between different array types

v1.1.0909.2208
- enabling wider serialization of generic IDictionary<TKey, TVal>

v1.1.0909.2011
- leveraging jQuery for replacements if available
- bug fix for using a switcher method as template name

v1.1.0909.1910
- enabled autobinding of DataBinding expressions in JBST:Control server control
- JBST server control can now bind initial data without using code behind

v1.1.0908.1708
- extended EcmaScriptIdentifier keyword check to support nested Identifiers
- added list of intrinsic objects so EcmaScriptWriter doesn't emit var for default browser objects

v1.1.0908.1614
- cleaned up and centralized JavaScript namespace generation
- added reserved word checking to identifiers
- cleaned up JSON-RPC service proxy output

v1.1.0908.1209
- added better EcmaScriptIdentifier/String conversions

v1.1.0908.0911
- added EcmaScriptIdentifier type to be able to natively serialize references to objects/functions

v1.1.0908.0909
- add configuration section to be able to better control compaction settings

v1.1.0907.2623
- replaced JSLint/JSMin/MSScriptControl with YuiCompressor.NET/EcmaScript.NET
- added configuration section for controlling script compaction

v1.0.0907.0109
- added Source property to IOptimizedResult which provides access to original resource source
- small tweaks to fix compilation issues under Mono Framework 2.4

v1.0.0906.2823
- allowed JBSTs returned by code blocks to be further databound (simplifies "switcher" template syntax)
- fixed JBST parser inconsistencies in possible values for jbst:control arguments
- lifted restriction on name parameter in jbst:control, can be any valid expression
- subtle change in calling of functions when used as expressions: passing along "this" context
- fixed issue when no JsonML filter is defined
- fixed jbst:visible not recognizing some false-y values
- better condensing of nested document fragments
- now pre-aggregating adjacent text nodes before hydration
- now pre-culling empty doc-fragments before hydration

v1.0.0906.2122
- improved jQuery selector support with more efficient implementation
- fixed potential double binding issue

v1.0.0906.0712
- added JSON-RPC utility for calling services from C#

v1.0.0906.0623
- modified ResourceHandlerFactory to prevent pretty-print when web.config has debug="false"
- added DebugResourceHandlerFactory which allows pretty-print even when web.config has debug="false"
- added work-around for CodeGen / C# compiler conflict with large strings

v1.0.0906.0408
- added replacer function which patches known bug in IE8's native JSON
- changed error strings in scripts as some pre-fetch algorithms were trying to download the messages as URLs

v1.0.0905.2307
- modified JsonFx.Bindings.replace to leverage jQuery document.ready when jQuery loaded after JsonFx

v1.0.0905.2108
- fixed JSON-RPC errors not properly unwraping exceptions

v1.0.0905.2007
- fixed issue with inserting documentFragments into tables
- added "window" to list of globals as latest JSLint removed support for it

v1.0.0905.1909
- added Jbst.Bind override for MVC helper

v1.0.0905.1309
- Better callbacks from JsonFx.JsonRpc.Settings
- Allowing replacement of JSON-RPC serialization
- Added JsonFx.IO.loadScript for assisting with cross-domain jsonp calls.

v1.0.0905.1210
- Added JsonFx.JsonRpc.Settings for better JSON-RPC configuration and error handling.

v1.0.0905.1020
- Added static Helper class for simplifying integration with ASP.NET MVC

v1.0.0905.0422
- fixed bug where unparsed blocks were emitting incorrectly
- fixed possible exceptions during exception handling in Cassini Web Server

v1.0.0905.0323
- fixed bug where empty code blocks could emit an invalid structure

v1.0.0905.0212
- enabled merge format to explicitly specify debug / compact script paths
	- enables providing extra debug logic or alternate compaction (e.g. obfuscation)
	- good for libraries (like jQuery) which don't compact well with JSMin
- centralized JBST minification as single pass
	- now compacts inline code better
	- compilation is more efficient
- fixed JSLint options in binding script

v1.0.0904.2623
- added mechanism for removing stream compression
- moved stream compression later in page cycle

v1.0.0904.2609
- added expires header to globalization strings requests
- added parent-script hash to help with expiration

v1.0.0904.1707
- fixed the situation where DateTimeKind.Unspecified DateTimes were being treated as server-local time
- now DateTimeKind.Unspecified DateTimes are treated as browser-local time
- added static method so EcmaScriptWriter.Serialize works as expected

v1.0.0904.1609
- fix for <object> tags
- allowing defaults for all JsonFx.IO events
- fix in auto-link TLD regex

v1.0.0903.2921
- fixed typo in error messages

v1.0.0903.2812
- added jbst:oninit callback which executes one time for an element after fully hydrated
- added jbst:onload callback which executes one time for an element after is inserted into parentNode

v1.0.0903.2510
- standardized alert/debugger pattern for errors

v1.0.0903.2408
- extended AutoLink to include URLs with common TLDs (com, net, org, edu, gov) but without the URI scheme (assumed "http://")
- tweaked IE script hacks to work around iframe issue

v1.0.0903.1808
- tweaked IE script hacks

v1.0.0903.1622
- added script firewall to merge files which prevents one script from causing entire merge to fail
- fixed bug with IE not being able to properly set name attribute

v1.0.0903.1609
- HtmlDistiller
	- added auto-link parsing (URLs in literals can be optionally converted to hyperlinks)
	- auto-link capability leverages further customization through FilterUrl method
	- added ability to change the truncation indicator (defaults to ellipsis)
	- improved interface for customizing
	- completely removed filtering responsibility from IHtmlWriter
	- added ability for HtmlFilter to directly call HtmlWriter
	- enabled emitting of filtered JsonML / JBST markup
- cleaned up parsing of server-code (removed some old dormant code, removed redundant parsing)
- now driving the default for compacted scripts/css/merge off the compilation debug="[bool]" app setting (rather than always compacted)
  i.e. no flag switches based upon config, "?debug" is always debug, ?[sha1-hash] is always permanently cached, any other value is always compacted

v1.0.0903.1309
- fixed complex attribute typo in JBST builder script
- enables creating events with closures during databinding

v1.0.0903.1209
- added ability to render .NET Regex as ECMAScript RegExp literals in script data blocks
- created an EcmaScriptWriter which can also serialize native non-JSON ECMAScript data types (e.g. DateTime, RegExp)

v1.0.0903.0714
- add new intrinsic member to JBSTs: this.count
  where this.index is the current data index, this.count is the number of data items being bound
- reduced extraneous whitespace nodes around templates
- added unwrapping of documentFragment results when only contain single element
- improved HtmlDistiller's ability to understand difference between tags and unescaped less-than literals
- updated StarterKit documentation

v1.0.0903.0509
- improved type coercion between sequences of strongly types objects
- refactored type-coercion code out of JsonReader into utility class

v1.0.0903.0408
- added ability to specify inline anonymous templates in JBST using declarative <jbst:control></jbst:control> syntax
- cleaned up calling template parts in the context of "this"

v1.0.0903.0309
- added unparsed block syntax <%# ... %> for inserting data that contains markup
- fixed bug where globalization keys weren't being correctly picked up in DOM attributes

v1.0.0903.0117
- added JsonML.BST.bind to dataBind and hydrate all in one step (including JsonFx behavior binding)
- deprecated JsonFx.UI.bind(jbst,data) in favor of myJBST.bind(data,index) on JBSTs
- updated documentation examples to use myJBST.bind
- deprecated JsonFx.Bindings.register(tag,css,bind,unbind) in favor of more flexible JsonFx.Bindings.add(selector,bind,unbind)
- enabled JsonFx.Bindings.add to accept any jQuery selector if jQuery is present
- eneabled native JsonFx.Bindings.add to accept lists of simple selectors and simple ID selectors
- updated documentation examples to use JsonFx.Bindings.add
- changed JsonML.BST from constructor to factory (i.e. "JsonML.BST(jbst);" rather than "new JsonML.BST(jbst);")
- allowed JsonML.BST factory to accept a function which switches templates based upon input data
- added JsonFx.Bindings.replace to further reduce redundant output of jbst server control

v1.0.0902.2522
- fix for binding issue where elements getting added may alter the set of elements still being processed
- being less aggressive about CF/LF suppression in JavaScript compaction to be more compatible with broken scripts
- fixed long-standing issue with JSLint which prevented upgrading to latest version of Crockford's code
- upgraded JSLINT to rev 2009-02-13
- adding basic IIS7 handler mappings to web.configs

v1.0.0902.1623
- added an InlineData property on the server jbst:control to directly serialize and bind one-time-use data without needing to name it

v1.0.0902.1608
- fixed a bug in CSS compaction when specifying web fonts with @font-face blocks:
	- fixed at-rules which do not have a value after the identifier
	- fixed at-rules with blocks of declarations (rather than rule-sets)
	- improved whitespace removal in at-rules with blocks of declarations
- fixed a situation where a JBST expression result of undefined or null could generate DOM attributes with that value
- changed "BuildTools" namespace to "JsonFx.BuildTools" for consistency
- enabled ResourceBuildProviders to be able to load referenced assemblies in Mono
- enabled XML comment documentation output and added project warning suppression for 1570,1571,1572,1573,1591,1592

v1.0.0902.0823
- added ability to emit data blocks directly from server jbst:Control (doesn't require additional ScriptDataBlock)
- changed IHttpHanderFactory implementations from explicit to virtual to allow easier extension
- added ability to manually control emitting of localization values
- began refactoring behavior bindings to allow more flexible mappings

v1.0.0902.0201
- split CompiledBuildResult into a couple interfaces for better modularity and extensibility
- improved generated C#
- simplified and reduced the bulk of generated JSON-RPC proxies
- JSON-RPC proxies should cache better now that SHA1 isn't rolling with each rebuild
- added better ECMAScript indentifier checks for various components
- improved globalization for local resources

v1.0.0901.2923
- fixed long-standing caching bug whereby .NET added "Vary: *" cache header
- added hooks to reference resources which precompiled by BuildManager in ResourceIncludes
- reduced one BuildManager instantiation ResourceHandler
- added assembly to type-hinting in JSON serializer
- improved error messaging in object instantiation in JSON serializer
- removed auto-injection of JsonFx version number into compacted merge scripts

v1.0.0901.2513
- enabled JBST Controls and PlaceHolders to specify data and index as code expression
- added first pass at a JBST server control for specifying page hooks for JSBT insertion
- clean up of JBST compiler generated code
- improved compatibility with Mono Framework
- full compatibility with environments missing MSScriptControl
- added "JSLINT" conditional compilation symbols to enable/disable JSLint compilation.
- removed jsonfx:options attribute auto-parsing

v1.0.0901.1919
- begining to better leverage jQuery if present
- added ability to programmatically suppress JBST output with jbst:visible="<%= false %>"
- improving resource compilation error reporting (css, js, jbst, merge)
- bubbling up compilation errors to page level
- fixed bug where under certain circumstances error wasn't being properly reported
- using SHA1 rather than MD5 for resource cache keys/ETags
- added switch to control how stylesheets are attached (link, style import)
- added pass-through for any attributes added to ResourceInclude (e.g. media="print" rel="alternate")

v1.0.0901.1017
- improved JBST compilation to support <script type="text/javascript">...</script> as equivalent to <%! ... %>
- allows JavaScript syntax highlighting in JBST init scripts

v1.0.0901.0318
- improved deserialization of numeric flags enums
- improved type inference of JsonReader interface in C# 3.0
- improved deserialization of typed generic dictionaries

v1.0.0812.2115
- fixed Opera bug in json2.js (Opera doesn't like escaped unicode chars in RegExp literals)
- added workaround for Opera bug in JsonFx_History.js

v1.0.0812.1208
- cleaned up the project examples & templates
- improved the JSON-RPC templates

v1.0.0812.0717
- added ability to add custom headers to service requests on a global or per-service request via callback
- disabled Ajax request timeout when is a debug build
- fixed a typo in the JSON-RPC Visual Studio Template
- updated to latest json2.js (2008-11-19)

v1.0.0812.0612
- made maximum depth of JSON serialization configurable
- added string to char type coercion
- improved type coercion of JSON-RPC params

v1.0.0812.0116
- Redeployment of v1.0.0812.0114 (change wasn't properly picked up)

v1.0.0812.0114
- Rolled back a breaking change in serializer which caused JSON-RPC param list to incorrectly deserialize

v1.0.0811.2910
- Enabled serialization of Anonymous Types
- Improved efficiency of serialization
- Added improved CoerceType syntax

v1.0.0811.1622
- Added ScriptDateBlock control for easily emitting JavaScript data into page
- Added ability to arbitrarily serialize DateTime objects

v1.0.0811.1512
- Fixed bug where ResourceCodeProviders were bleeding data when reused by ASP.NET BuildManager

v1.0.0811.1220
- Fixed JsonReader.CoerceType when converting from number to enum

v1.0.0811.0112
- Improved debugging mode

v1.0.0810.2617
- Improved error messaging

v1.0.0810.2611
- Strongly-typed some JSON-RPC parameters
- Improved setup documentation around MSScriptControl
- Made build-time continue even when JScript COM Interop not registered

v1.0.0810.2108
- Made build-time JScript COM Interop more robust on Win2K8 x64

v1.0.0810.1810
- Fixed breaking change in C# 3.0 access modifiers
- Fixed typo in Visual Studio templates description

v1.0.0810.1508
- Made script errors warnings until expose a mechanism to choose

v1.0.0810.0513:
- Added source for JsonFx.BuildTools (rather than including as assembly)
- Renamed JsonMLBrowserModule to JsonFxBrowserModule and removed from Template web.config

v1.0.0808.0316
- Added full JBST support

v1.0.0801.2409
- Made number parsing more efficient (no try-catching)
- Number parsing better obeys expected types

v1.0.0712.1623
- Simplified object serialization to include any IDictionary with String keys
- Made DateTime serialization conform to ISO-8601

v1.0.0710.2409
- Fixed strong-type bug

v1.0.0710.2305
- Fixed "-Infinity" causing "Unterminated Number" exception

v1.0.0710.2017
- Improved literal parsing to not use Substring()

v1.0.0710.2012
- Fixed bug in array auto-typing
- Fixed bug with reading empty objects
- Improved specificity of error messages
- Added line/col numbers to errors

v1.0.0710.2009
- Renaming namespace JsonFx.Serialization -> JsonFx.Json
- Rename namespace JsonFx.Services -> JsonFx.JsonRpc

v1.0.0710.1908
- Now encoding '<' as it can cause issues in script tags

v1.0.0706.0000
- Fixed bugs where if new compacted resource was shorter would leave remnants of old content
- Improved CssUserAgent for Safari 3 betas
- Added ETag support

v1.0.0705.1916
- Fixed bug where ResourceCodeProvider was being reused and resources were experiencing collisions

v1.0.0705.1608
- Fixed bug where BuildManager fails when resources aren't prebuilt
- Added "X-JsonFx-Version" response header

v1.0.0705.1501
- Fixed bug in JsonMLTextWriter, where was outputting HTML comments
- Suppressed error where BuildManager fails when resources aren't prebuilt

v1.0.0705.0801
- Added basic History example
- Now supports full error reporting and compaction of CSS & JavaScript
- Cleaned up scripts based upon latest JSLint restrictions
- Fixed error formatting in BuildTools
- Trapping x64 exceptions in BuildTools (MSScriptControl requires x86)
- Made JsonFx strongly signed enabling placement in the GAC

v1.0.0704.2321
- Fixed bug in JsonMLTextWriter, where wouldn't write attributes of an empty element

v1.0.0704.2320
- Removed need for .browser files by adding HttpModule:
- Produces more consistent async request behavior across platforms
- Simplifies integration by reducing feature to a single line in web.config
- Moved ASP.NET .browser "fixes" into single Other.browser file
- Pruned some obsolete/dormant classes

v1.0.0704.2210
- Cleaned up display of JSON-RPC Service test
- Added ability to specify the javascript proxy namespace on a JSON-RPC service
- Made service proxy a true singleton, rather than an instance in a static field
- Cleaned up JsonService attributes a bit to more closely align with ASP.NET WebServices
- Added example WebService which uses the same class as the JsonService (to further demonstrate similarities)
- Fixed some minor bugs in edge case service errors
- Added ~/Download/LatestBuild.ashx so download URL doesn't need to change

v1.0.0704.1900
- Added bare bones example but shows most concepts
- Added Example pages ~/Services/ and ~/Effects/ with some light instructions on them
- CSS compaction isn't quite finished

v1.0.0703.1808
- Added auto-versioning to assembly and scripts
- Update of script compactor to produce custom timestamps

v1.0.0703.0319
- Fixed empty array deserialization bug
- Fixed crash when bad JSON in ServiceTest
- Beginning better exception messaging
